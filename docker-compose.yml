version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["./server", "server"]
    ports:
      - "8080:8080"
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - game-ad-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["./server", "worker"]
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - game-ad-network
    deploy:
      replicas: 2

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - game-ad-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  # prometheus:
  #   image: prom/prometheus:latest
  #   volumes:
  #     - ./deployments/prometheus:/etc/prometheus
  #     - prometheus-data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #     - '--web.enable-lifecycle'
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - game-ad-network
  #   restart: unless-stopped
  #   depends_on:
  #     - api
  #     - worker

  # grafana:
  #   image: grafana/grafana:latest
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #     - ./deployments/grafana/provisioning:/etc/grafana/provisioning
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=password
  #     - GF_USERS_ALLOW_SIGN_UP=false
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - game-ad-network
  #   restart: unless-stopped
  #   depends_on:
  #     - prometheus

networks:
  game-ad-network:
    driver: bridge

volumes:
  redis-data:
  # prometheus-data:
  # grafana-data:
